{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mat\\\\Desktop\\\\BarangayBMIS\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\nimport styled from 'styled-components';\nimport { listImages } from '../actions/imageActions';\nconst Wrapper = styled.section`\n  background-size: cover;\n  min-height: 100%;\n  min-width: 1024px;\n  width: 100%;\n  height: auto;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n_c = Wrapper;\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const imageList = useSelector(state => state.imageList);\n  const {\n    images\n  } = imageList;\n  useEffect(() => {\n    dispatch(listImages());\n  }, [dispatch]);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/home';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(username, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: images.map(image => /*#__PURE__*/_jsxDEV(Wrapper, {\n      style: {\n        backgroundImage: `url(${image.loginImage.replace(/\\\\/, '/')})`\n      },\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-light bg-danger\",\n          children: \" Calingag BMIS \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-light\",\n          children: \" Sign In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          varaint: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"text-light\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"username\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"text-light\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"success\",\n            className: \"my-3\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n\n_s(LoginScreen, \"m4hzFBZwxLS+WCkH/EFLhzn0gm0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = LoginScreen;\nexport default LoginScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/Mat/Desktop/BarangayBMIS/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","login","styled","listImages","Wrapper","section","LoginScreen","location","history","username","setUsername","password","setPassword","dispatch","imageList","state","images","userLogin","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","map","image","backgroundImage","loginImage","replace","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport styled from 'styled-components'\nimport { listImages } from '../actions/imageActions'\n\nconst Wrapper = styled.section`\n  background-size: cover;\n  min-height: 100%;\n  min-width: 1024px;\n  width: 100%;\n  height: auto;\n  position: fixed;\n  top: 0;\n  left: 0;\n`\n\nconst LoginScreen = ({ location, history }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const imageList = useSelector((state) => state.imageList)\n  const { images } = imageList\n\n  useEffect(() => {\n    dispatch(listImages())\n  }, [dispatch])\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/home'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(username, password))\n  }\n\n  return (\n    <>\n      {images.map((image) => (\n        <Wrapper\n          style={{\n            backgroundImage: `url(${image.loginImage.replace(/\\\\/, '/')})`,\n          }}\n        >\n          <FormContainer>\n            <h1 className=\"text-light bg-danger\"> Calingag BMIS </h1>\n            <h2 className=\"text-light\"> Sign In </h2>\n            {error && <Message varaint=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"username\">\n                <Form.Label className=\"text-light\">Username</Form.Label>\n                <Form.Control\n                  type=\"username\"\n                  placeholder=\"Enter username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label className=\"text-light\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" variant=\"success\" className=\"my-3\">\n                Sign In\n              </Button>\n            </Form>\n          </FormContainer>\n        </Wrapper>\n      ))}\n    </>\n  )\n}\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}