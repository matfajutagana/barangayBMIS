{"ast":null,"code":"import { BLOTTER_LIST_REQUEST, BLOTTER_LIST_SUCCESS, BLOTTER_LIST_FAIL, BLOTTER_DETAILS_REQUEST, BLOTTER_DETAILS_SUCCESS, BLOTTER_DETAILS_FAIL, BLOTTER_CREATE_REQUEST, BLOTTER_CREATE_SUCCESS, BLOTTER_CREATE_FAIL, BLOTTER_CREATE_RESET, BLOTTER_DELETE_REQUEST, BLOTTER_DELETE_SUCCESS, BLOTTER_DELETE_FAIL, BLOTTER_UPDATE_REQUEST, BLOTTER_UPDATE_SUCCESS, BLOTTER_UPDATE_FAIL, BLOTTER_UPDATE_RESET } from '../constants/blotterConstants';\nexport const blotterListReducer = (state = {\n  blotters: []\n}, action) => {\n  switch (action.type) {\n    case BLOTTER_LIST_REQUEST:\n      return {\n        loading: true,\n        blotters: []\n      };\n\n    case BLOTTER_LIST_SUCCESS:\n      return {\n        loading: false,\n        blotters: action.payload\n      };\n\n    case BLOTTER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const blotterDetailsReducer = (state = {\n  blotter: {\n    reviews: []\n  }\n}, action) => {\n  switch (action.type) {\n    case BLOTTER_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n\n    case BLOTTER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        blotter: action.payload\n      };\n\n    case BLOTTER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const blotterDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOTTER_DELETE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOTTER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true\n      };\n\n    case BLOTTER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const blotterCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOTTER_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOTTER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        blotter: action.payload\n      };\n\n    case BLOTTER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case BLOTTER_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const blotterUpdateReducer = (state = {\n  blotter: {}\n}, action) => {\n  switch (action.type) {\n    case BLOTTER_UPDATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case BLOTTER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        blotter: action.payload\n      };\n\n    case BLOTTER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case BLOTTER_UPDATE_RESET:\n      return {\n        blotter: {}\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Mat/Desktop/BarangayBMIS/frontend/src/reducers/blotterReducers.js"],"names":["BLOTTER_LIST_REQUEST","BLOTTER_LIST_SUCCESS","BLOTTER_LIST_FAIL","BLOTTER_DETAILS_REQUEST","BLOTTER_DETAILS_SUCCESS","BLOTTER_DETAILS_FAIL","BLOTTER_CREATE_REQUEST","BLOTTER_CREATE_SUCCESS","BLOTTER_CREATE_FAIL","BLOTTER_CREATE_RESET","BLOTTER_DELETE_REQUEST","BLOTTER_DELETE_SUCCESS","BLOTTER_DELETE_FAIL","BLOTTER_UPDATE_REQUEST","BLOTTER_UPDATE_SUCCESS","BLOTTER_UPDATE_FAIL","BLOTTER_UPDATE_RESET","blotterListReducer","state","blotters","action","type","loading","payload","error","blotterDetailsReducer","blotter","reviews","blotterDeleteReducer","success","blotterCreateReducer","blotterUpdateReducer"],"mappings":"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","sourcesContent":["import {\n  BLOTTER_LIST_REQUEST,\n  BLOTTER_LIST_SUCCESS,\n  BLOTTER_LIST_FAIL,\n  BLOTTER_DETAILS_REQUEST,\n  BLOTTER_DETAILS_SUCCESS,\n  BLOTTER_DETAILS_FAIL,\n  BLOTTER_CREATE_REQUEST,\n  BLOTTER_CREATE_SUCCESS,\n  BLOTTER_CREATE_FAIL,\n  BLOTTER_CREATE_RESET,\n  BLOTTER_DELETE_REQUEST,\n  BLOTTER_DELETE_SUCCESS,\n  BLOTTER_DELETE_FAIL,\n  BLOTTER_UPDATE_REQUEST,\n  BLOTTER_UPDATE_SUCCESS,\n  BLOTTER_UPDATE_FAIL,\n  BLOTTER_UPDATE_RESET,\n} from '../constants/blotterConstants'\n\nexport const blotterListReducer = (state = { blotters: [] }, action) => {\n  switch (action.type) {\n    case BLOTTER_LIST_REQUEST:\n      return { loading: true, blotters: [] }\n    case BLOTTER_LIST_SUCCESS:\n      return { loading: false, blotters: action.payload }\n    case BLOTTER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const blotterDetailsReducer = (\n  state = { blotter: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case BLOTTER_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case BLOTTER_DETAILS_SUCCESS:\n      return { loading: false, blotter: action.payload }\n    case BLOTTER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const blotterDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOTTER_DELETE_REQUEST:\n      return { loading: true }\n    case BLOTTER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case BLOTTER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const blotterCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case BLOTTER_CREATE_REQUEST:\n      return { loading: true }\n    case BLOTTER_CREATE_SUCCESS:\n      return { loading: false, success: true, blotter: action.payload }\n    case BLOTTER_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case BLOTTER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const blotterUpdateReducer = (state = { blotter: {} }, action) => {\n  switch (action.type) {\n    case BLOTTER_UPDATE_REQUEST:\n      return { loading: true }\n    case BLOTTER_UPDATE_SUCCESS:\n      return { loading: false, success: true, blotter: action.payload }\n    case BLOTTER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case BLOTTER_UPDATE_RESET:\n      return { blotter: {} }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}