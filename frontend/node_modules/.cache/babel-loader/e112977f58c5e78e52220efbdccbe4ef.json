{"ast":null,"code":"import axios from 'axios';\nimport { RESIDENT_LIST_REQUEST, RESIDENT_LIST_SUCCESS, RESIDENT_LIST_FAIL, RESIDENT_DETAILS_REQUEST, RESIDENT_DETAILS_SUCCESS, RESIDENT_DETAILS_FAIL, RESIDENT_DELETE_REQUEST, RESIDENT_DELETE_SUCCESS, RESIDENT_DELETE_FAIL, RESIDENT_CREATE_REQUEST, RESIDENT_CREATE_SUCCESS, RESIDENT_CREATE_FAIL, RESIDENT_UPDATE_REQUEST, RESIDENT_UPDATE_SUCCESS, RESIDENT_UPDATE_FAIL } from '../constants/residentConstants';\nexport const listResidents = () => async dispatch => {\n  try {\n    dispatch({\n      type: RESIDENT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/residents');\n    dispatch({\n      type: RESIDENT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listResidentDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: RESIDENT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/residents/${id}`);\n    dispatch({\n      type: RESIDENT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteResident = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/residents/${id}`, config);\n    dispatch({\n      type: RESIDENT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createResident = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/residents`, {}, config);\n    dispatch({\n      type: RESIDENT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateResident = resident => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/residents/${resident._id}`, resident, config);\n    dispatch({\n      type: RESIDENT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Mat/Desktop/BarangayBMIS/frontend/src/actions/residentActions.js"],"names":["axios","RESIDENT_LIST_REQUEST","RESIDENT_LIST_SUCCESS","RESIDENT_LIST_FAIL","RESIDENT_DETAILS_REQUEST","RESIDENT_DETAILS_SUCCESS","RESIDENT_DETAILS_FAIL","RESIDENT_DELETE_REQUEST","RESIDENT_DELETE_SUCCESS","RESIDENT_DELETE_FAIL","RESIDENT_CREATE_REQUEST","RESIDENT_CREATE_SUCCESS","RESIDENT_CREATE_FAIL","RESIDENT_UPDATE_REQUEST","RESIDENT_UPDATE_SUCCESS","RESIDENT_UPDATE_FAIL","listResidents","dispatch","type","data","get","payload","error","response","message","listResidentDetails","id","deleteResident","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createResident","post","updateResident","resident","put","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  RESIDENT_LIST_REQUEST,\n  RESIDENT_LIST_SUCCESS,\n  RESIDENT_LIST_FAIL,\n  RESIDENT_DETAILS_REQUEST,\n  RESIDENT_DETAILS_SUCCESS,\n  RESIDENT_DETAILS_FAIL,\n  RESIDENT_DELETE_REQUEST,\n  RESIDENT_DELETE_SUCCESS,\n  RESIDENT_DELETE_FAIL,\n  RESIDENT_CREATE_REQUEST,\n  RESIDENT_CREATE_SUCCESS,\n  RESIDENT_CREATE_FAIL,\n  RESIDENT_UPDATE_REQUEST,\n  RESIDENT_UPDATE_SUCCESS,\n  RESIDENT_UPDATE_FAIL,\n} from '../constants/residentConstants'\n\nexport const listResidents = () => async (dispatch) => {\n  try {\n    dispatch({ type: RESIDENT_LIST_REQUEST })\n\n    const { data } = await axios.get('/api/residents')\n\n    dispatch({\n      type: RESIDENT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listResidentDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: RESIDENT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/residents/${id}`)\n\n    dispatch({\n      type: RESIDENT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteResident = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/residents/${id}`, config)\n\n    dispatch({\n      type: RESIDENT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createResident = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/residents`, {}, config)\n\n    dispatch({\n      type: RESIDENT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\nexport const updateResident = (resident) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RESIDENT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/residents/${resident._id}`,\n      resident,\n      config\n    )\n\n    dispatch({\n      type: RESIDENT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: RESIDENT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}