{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mat\\\\Desktop\\\\BarangayBMIS\\\\frontend\\\\src\\\\screens\\\\BlotterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport BlotterTable from '../components/BlotterTable';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listBlotters, createBlotter, deleteBlotter } from '../actions/blotterActions';\nimport { BLOTTER_CREATE_RESET } from '../constants/blotterConstants';\n\nconst BlotterScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const blotterList = useSelector(state => state.blotterList);\n  const {\n    loading,\n    error,\n    blotters\n  } = blotterList;\n  const blotterDelete = useSelector(state => state.blotterDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = blotterDelete;\n  const blotterCreate = useSelector(state => state.blotterCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    blotter: createdBlotter\n  } = blotterCreate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    dispatch({\n      type: BLOTTER_CREATE_RESET\n    });\n\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    }\n\n    if (successCreate) {\n      history.push(`/admin/blotter/${createdBlotter._id}/edit`);\n    } else {\n      dispatch(listBlotters());\n    }\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdBlotter]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure you want to delete?')) {\n      dispatch(deleteBlotter(id));\n    }\n  };\n\n  const createBlotterHandler = () => {\n    dispatch(createBlotter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Peace and Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"ol\", {\n              className: \"breadcrumb float-sm-right\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"breadcrumb-item active\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  class: \"btn btn-block btn-success\",\n                  onClick: createBlotterHandler,\n                  children: \"+ Create Blotter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loadingDelete && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }, this), errorDelete && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), loadingCreate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }, this), errorCreate && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: errorCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(BlotterTable, {\n                res: blotters.map((blotter, i) => ({ ...blotter,\n                  details: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/admin/blotter/${blotter._id}/edit`,\n                    className: \"btn btn-success btn-sm\",\n                    children: \"View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 25\n                  }, this)],\n                  edit: [/*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n                      to: `/admin/blotter/${blotter._id}/edit`,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"light\",\n                        className: \"btn-sm\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"danger\",\n                      className: \"btn-sm\",\n                      onClick: () => deleteHandler(blotter._id),\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlotterScreen, \"ILJXvZV2gKDzYcnaeJuKCaJ3Fh4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BlotterScreen;\nexport default BlotterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlotterScreen\");","map":{"version":3,"sources":["C:/Users/Mat/Desktop/BarangayBMIS/frontend/src/screens/BlotterScreen.js"],"names":["React","useEffect","useDispatch","useSelector","LinkContainer","Link","Button","BlotterTable","Message","Loader","listBlotters","createBlotter","deleteBlotter","BLOTTER_CREATE_RESET","BlotterScreen","history","match","dispatch","blotterList","state","loading","error","blotters","blotterDelete","loadingDelete","errorDelete","success","successDelete","blotterCreate","loadingCreate","errorCreate","successCreate","blotter","createdBlotter","userLogin","userInfo","type","isAdmin","push","_id","deleteHandler","id","window","confirm","createBlotterHandler","map","i","details","edit"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport BlotterTable from '../components/BlotterTable'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listBlotters,\n  createBlotter,\n  deleteBlotter,\n} from '../actions/blotterActions'\nimport { BLOTTER_CREATE_RESET } from '../constants/blotterConstants'\n\nconst BlotterScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n\n  const blotterList = useSelector((state) => state.blotterList)\n  const { loading, error, blotters } = blotterList\n\n  const blotterDelete = useSelector((state) => state.blotterDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = blotterDelete\n\n  const blotterCreate = useSelector((state) => state.blotterCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    blotter: createdBlotter,\n  } = blotterCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: BLOTTER_CREATE_RESET })\n\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/blotter/${createdBlotter._id}/edit`)\n    } else {\n      dispatch(listBlotters())\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdBlotter,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure you want to delete?')) {\n      dispatch(deleteBlotter(id))\n    }\n  }\n\n  const createBlotterHandler = () => {\n    dispatch(createBlotter())\n  }\n\n  return (\n    <div className=\"content-wrapper\">\n      {/* Content Header (Page header) */}\n\n      <section className=\"content-header\">\n        <div className=\"container-fluid\">\n          <div className=\"row mb-2\">\n            <div className=\"col-sm-6\">\n              <h1> Peace and Order</h1>\n            </div>\n            <div className=\"col-sm-6\">\n              <ol className=\"breadcrumb float-sm-right\">\n                <li className=\"breadcrumb-item active\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-block btn-success\"\n                    onClick={createBlotterHandler}\n                  >\n                    + Create Blotter\n                  </button>\n                </li>\n              </ol>\n            </div>\n          </div>\n        </div>\n        {/* /.container-fluid */}\n      </section>\n      {/* Main content */}\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <section className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              {/* /.card */}\n              <div className=\"card \">\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  <BlotterTable\n                    res={blotters.map((blotter, i) => ({\n                      ...blotter,\n                      details: [\n                        <Link\n                          to={`/admin/blotter/${blotter._id}/edit`}\n                          className=\"btn btn-success btn-sm\"\n                        >\n                          View\n                        </Link>,\n                      ],\n                      edit: [\n                        <>\n                          <LinkContainer\n                            to={`/admin/blotter/${blotter._id}/edit`}\n                          >\n                            <Button variant=\"light\" className=\"btn-sm\">\n                              <i className=\"fas fa-edit\"></i>\n                            </Button>\n                          </LinkContainer>\n                          <Button\n                            variant=\"danger\"\n                            className=\"btn-sm\"\n                            onClick={() => deleteHandler(blotter._id)}\n                          >\n                            <i className=\"fas fa-trash\"></i>\n                          </Button>\n                        </>,\n                      ],\n                    }))}\n                  />\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n            </div>\n            {/* /.col */}\n          </div>\n\n          {/* /.row */}\n        </section>\n      )}\n    </div>\n  )\n}\n\nexport default BlotterScreen\n"]},"metadata":{},"sourceType":"module"}